---
- name: Install required rpi packages
  ansible.builtin.package:
    name:
      - build-essential
      - git
    state: present
  become: true
  become_user: root

- name: Install required JamesII packages
  ansible.builtin.package:
    name:
      - python3-full
      - python3-virtualenv
      - python3-dev
      - python3-packaging
    state: present
  become: true
  become_user: root

- name: Setup syslog rule for JamesII
  ansible.builtin.copy:
    src: james2.conf
    dest: /etc/rsyslog.d/james2.conf
    owner: root
    group: root
    mode: "0644"
  notify: Restart rsyslog
  become: true
  become_user: root

- name: Ensuring JamesII folder
  ansible.builtin.file:
    state: directory
    path: "{{ james_on_rpi_install_dir }}"
    owner: "{{ james_on_rpi_os_user }}"
    group: "{{ james_on_rpi_os_user }}"
    mode: "0755"
  become: true
  become_user: root

- name: Ensuring JamesII source
  ansible.builtin.git:
    repo: "https://github.com/oxivanisher/JamesII.git"
    dest: "{{ james_on_rpi_install_dir }}"
    accept_hostkey: true
    update: true
    version: "{{ james_on_rpi_git_branch }}"
  become: true
  become_user: "{{ james_on_rpi_os_user }}"
  notify: Restart james2

- name: Fixing git permissions
  ansible.builtin.file:
    path: "{{ james_on_rpi_install_dir }}/.git/FETCH_HEAD"
    owner: "{{ james_on_rpi_os_user }}"
    group: "{{ james_on_rpi_os_user }}"
    mode: "0644"
  failed_when: false
  become: true
  become_user: root

- name: Delete existing venv
  ansible.bultin.file:
    path: james_on_rpi_rm_existing_venv
    state: absent
  when: james_on_rpi_rm_existing_venv

- name: Install python requirements
  ansible.builtin.pip:
    requirements: "{{ james_on_rpi_install_dir }}/requirements.txt"
    virtualenv: "{{ james_on_rpi_install_dir }}/venv"
    virtualenv_command: /usr/bin/python3 -m venv
  become: true
  become_user: "{{ james_on_rpi_os_user }}"

- name: Deploy broker cfg for JamesII
  ansible.builtin.template:
    src: broker.yaml.jinja2
    dest: "{{ james_on_rpi_install_dir }}/config/broker.yaml"
    owner: "{{ james_on_rpi_os_user }}"
    group: "{{ james_on_rpi_os_user }}"
    mode: "0640"
  notify: Restart james2
  become: true
  become_user: root

- name: Deploy sudo cfg for JamesII
  ansible.builtin.template:
    src: james2.jinja2
    dest: /etc/sudoers.d/james2
    owner: "root"
    group: "root"
    mode: "0644"
    validate: /usr/sbin/visudo -cf %s
  notify: Restart james2
  become: true
  become_user: root

- name: Link cli script to /usr/local/bin/james
  ansible.builtin.file:
    src: "{{ james_on_rpi_install_dir }}/src/cli.sh"
    dest: /usr/local/bin/james
    state: link
  become: true
  become_user: root

- name: Deploy sudo cfg for JamesII cli
  ansible.builtin.template:
    src: james2-cli.jinja2
    dest: /etc/sudoers.d/james2-cli
    owner: "root"
    group: "root"
    mode: "0644"
    validate: /usr/sbin/visudo -cf %s
  become: true
  become_user: root

# systemd
- name: Install JamesII systemd unit file
  ansible.builtin.template:
    src: james2.service.jinja2
    dest: /etc/systemd/system/james2.service
    owner: root
    group: root
    mode: "0644"
  when: ansible_service_mgr == "systemd"
  notify: Restart james2
  become: true
  become_user: root

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true
  when: ansible_service_mgr == "systemd"
  become: true
  become_user: root

- name: Enable and start JamesII service
  ansible.builtin.service:
    name: james2.service
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd"
  become: true
  become_user: root

# upstart (thx and fuck you, xbian)
- name: Install JamesII upstart unit file
  ansible.builtin.template:
    src: james2.conf.jinja2
    dest: /etc/init/james2.conf
    owner: root
    group: root
    mode: "0644"
  when: ansible_service_mgr == "upstart"
  notify: Restart james2
  become: true
  become_user: root

- name: Start JamesII service
  ansible.builtin.service:
    name: james2
    state: started
    enabled: true
  when: ansible_service_mgr == "upstart"
  become: true
  become_user: root
