---
## Backport from kaliko for buster and bullseye

- name: Setup mpd for buster and bullseye with kaliko repo for current mpd
  when: ansible_distribution_release in ['buster','bullseye']
  block:
    - name: Add the Kaliko APT key by package for buster and bullseye
      ansible.builtin.apt:
        deb: https://deb.kaliko.me/kaliko-archive-keyring.deb

    - name: Add Kaliko Repository for buster and bullseye
      ansible.builtin.apt_repository:
        repo: >
          deb [signed-by=/usr/share/keyrings/deb.kaliko.me.gpg]
          https://deb.kaliko.me/raspbian-backports/ {{ ansible_distribution_release }}-backports main
        state: present
        filename: kaliko

    - name: Update apt cache for Kaliko repo in buster and bullseye
      ansible.builtin.apt:
        name: mpd
        default_release: "{{ ansible_distribution_release }}-backports"
        update_cache: true
        state: present

    - name: Fix logfile permissions
      ansible.builtin.file:
        path: /var/log/mpd/mpd.log
        owner: mpd
        group: audio
        mode: "0644"

## "Normal" mpd install starting from bookworm

- name: Setup mpd for bookworm and onwards
  when: ansible_distribution_release not in ['buster','bullseye']
  block:
    - name: Remove remaining kaliko keyring
      ansible.builtin.apt:
        name: kaliko-archive-keyring
        state: absent

    - name: Remove Kaliko Repository when not buster and bullseye
      ansible.builtin.apt_repository:
        repo: >
          deb [signed-by=/usr/share/keyrings/deb.kaliko.me.gpg]
          https://deb.kaliko.me/raspbian-backports/ {{ ansible_distribution_release }}-backports main
        state: absent
        filename: kaliko

    - name: Update apt cache for Kaliko repo in buster and bullseye
      ansible.builtin.apt:
        name: mpd
        update_cache: true
        state: present

- name: Install required mpd packages for james2
  ansible.builtin.package:
    name:
      - alsa-utils
      - espeak-ng
      - mpc
    state: present

- name: "Adding existing user to group audio: {{ james_os_user }}"
  ansible.builtin.user:
    name: "{{ james_os_user }}"
    groups: audio
    append: true

# ensure mounted boot
- name: Override config.txt location for Raspberry Pi OS version before bookworm
  ansible.builtin.set_fact:
    james_on_rpi_config_dir: /boot
  when: ansible_distribution_major_version | int < 12

- name: Mount boot
  ansible.posix.mount:
    path: "{{ james_on_rpi_config_dir }}"
    state: mounted
    src: "{{ raspberry_pi_boot_dev }}"
    fstype: vfat
  changed_when: false

- name: Configure config.txt for lirc rx
  ansible.builtin.lineinfile:
    path: "{{ james_on_rpi_config_dir }}/config.txt"
    regexp: "^dtparam=audio="
    line: "dtparam=audio=on"
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"
  when: "'hifiberry' not in group_names"

- name: Configure config.txt for lirc rx # noqa no-tabs
  ansible.builtin.lineinfile:
    path: /etc/mpd.conf
    regexp: "^bind_to_address"
    line: 'bind_to_address		"*"'
    # line: 'bind_to_address		"/run/mpd/socket"'
  notify: Restart mpd
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set volume via amixer
  ansible.builtin.command: amixer set 'PCM' 98%
  changed_when: false
  failed_when: false

- name: Disable and stop mpd socket
  ansible.builtin.service:
    name: mpd.socket
    state: stopped
    enabled: false
  when: ansible_service_mgr == "systemd"

- name: Enable and start mpd service
  ansible.builtin.service:
    name: mpd.service
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd"

- name: Start mpd service
  ansible.builtin.service:
    name: mpd
    state: started
    enabled: true
  when: ansible_service_mgr == "upstart"

- name: Deploy pink noise file
  ansible.builtin.copy:
    src: pink_noise.wav
    dest: /var/lib/mpd/music/pink_noise.wav
    owner: root
    group: root
    mode: "0644"

- name: Install python requirements for mpd
  ansible.builtin.pip:
    name:
      - python-mpd2
    virtualenv: "{{ james2_install_dir }}/venv"
