---

- name: add the Kaliko APT key
  ansible.builtin.apt_key:
    url: https://media.kaliko.me/kaliko.gpg
    state: present

- name: add Kaliko Repository
  ansible.builtin.apt_repository:
    repo: deb https://deb.kaliko.me/raspbian-backports/ stable-backports main
    state: present
    filename: kaliko

- name: update apt cache for Kaliko repo
  ansible.builtin.apt:
    name: mpd
    default_release: stable-backports
    update_cache: yes
    state: present

- name: install required mpd packages for james2
  ansible.builtin.package:
    name:
      - alsa-utils
      - espeak
      - mpc
    state: present

- name: adding existing user '{{ james_os_user }}' to group audio
  user:
    name: '{{ james_os_user }}'
    groups: audio
    append: yes

# ensure mounted boot
- name: mount boot
  ansible.posix.mount:
    path: /boot
    state: mounted
    src: /dev/mmcblk0p1
    fstype: vfat
  changed_when: False

- name: configure config.txt for lirc rx
  ansible.builtin.lineinfile:
    path: /boot/config.txt
    regexp: '^dtparam=audio='
    line: "dtparam=audio=on"
  notify: reboot required
  ignore_errors: "{{ ansible_check_mode }}"

- name: configure config.txt for lirc rx
  ansible.builtin.lineinfile:
    path: /etc/mpd.conf
    regexp: '^bind_to_address'
    line: 'bind_to_address		"*"'
    #line: 'bind_to_address		"/run/mpd/socket"'
  notify: restart mpd
  ignore_errors: "{{ ansible_check_mode }}"

- name: fix logfile permissions
  ansible.builtin.file:
    path: /var/log/mpd/mpd.log
    owner: mpd
    group: audio
    mode: '0644'

- name: set volume via amixer
  ansible.builtin.command: amixer set 'PCM' 98%
  changed_when: false
  ignore_errors: True

- name: disable and stop mpd socket
  ansible.builtin.service:
    name: mpd.socket
    state: stopped
    enabled: no
  when: ansible_service_mgr == "systemd"

- name: enable and start mpd service
  ansible.builtin.service:
    name: mpd.service
    state: started
    enabled: yes
  when: ansible_service_mgr == "systemd"

- name: start mpd service
  ansible.builtin.service:
    name: mpd
    state: started
    enabled: yes
  when: ansible_service_mgr == "upstart"

- name: deploy pink noise file
  ansible.builtin.copy:
    src: pink_noise.wav
    dest: /var/lib/mpd/music/pink_noise.wav
    owner: root
    group: root
    mode: '0644'

- name: install python requirements for mpd
  ansible.builtin.pip:
    name:
      - python-mpd2
    virtualenv: "{{ james2_install_dir }}/venv"
