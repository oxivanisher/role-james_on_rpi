---
# the lirc package is ultimatively stupid and fails at installation because the .dist file is not renamed to "non dist" if no other file is available ...
# so, the lirc package can not be installed by ansible without very big fuckery ... sry you had to come here and find this comment ... AGAIN
- name: Install python requirements for evdev-plugin
  ansible.builtin.pip:
    requirements: "{{ james_on_rpi_install_dir }}/requirements-evdev-plugin.txt"
    virtualenv: "{{ james_on_rpi_install_dir }}/venv"
  become: true
  become_user: "{{ james_on_rpi_os_user }}"

- name: Remove old lirc JamesII packages
  ansible.builtin.package:
    name: lirc
    state: absent
  become: true
  become_user: root

- name: Install required packages
  ansible.builtin.package:
    name: ir-keytable
    state: present
  become: true
  become_user: root

# ensure mounted boot
- name: Override config.txt location for Raspberry Pi OS version before bookworm
  ansible.builtin.set_fact:
    james_on_rpi_config_dir: /boot
  when:
    - ansible_architecture|lower in james_on_rpi_arm_versions
    - ansible_distribution_major_version | int < 12

- name: Override Raspberry PI boot device default since raspberry_pi_boot_dev is set
  ansible.builtin.set_fact:
    james_on_rpi_rpi_boot_dev: "{{ raspberry_pi_boot_dev }}"
  when:
    - ansible_architecture|lower in james_on_rpi_arm_versions
    - raspberry_pi_boot_dev | default('', true) | trim != ''

- name: Mount boot
  ansible.posix.mount:
    path: "{{ james_on_rpi_config_dir }}"
    state: mounted
    src: "{{ james_on_rpi_rpi_boot_dev }}"
    fstype: vfat
  when: ansible_architecture|lower in james_on_rpi_arm_versions
  changed_when: false
  become: true
  become_user: root

# configuring RPI GPIO
- name: Configure config.txt for evdev infrared rx
  ansible.builtin.lineinfile:
    path: "{{ james_on_rpi_config_dir }}/config.txt"
    regexp: "^dtoverlay=gpio-ir,gpio_pin="
    line: "dtoverlay=gpio-ir,gpio_pin={{ james_on_rpi_gpio_ir_rx_pin }}"
    insertafter: "^# Uncomment this to enable the lirc-rpi module"
  when: ansible_architecture|lower in james_on_rpi_arm_versions
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Configure config.txt for evdev infrared tx
  ansible.builtin.lineinfile:
    path: "{{ james_on_rpi_config_dir }}/config.txt"
    regexp: "^dtoverlay=gpio-ir-tx,gpio_pin="
    line: "dtoverlay=gpio-ir-tx,gpio_pin={{ james_on_rpi_gpio_ir_tx_pin }}"
    insertafter: "^dtoverlay=gpio-ir,gpio_pin"
  when: ansible_architecture|lower in james_on_rpi_arm_versions
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Put remote configs in place
  ansible.builtin.copy:
    src: "remotes/{{ item }}"
    dest: /etc/rc_keymaps/
    owner: root
    group: root
    mode: "0644"
  loop: "{{ james_on_rpi_evdev_remotes }}"
  when: james_on_rpi_evdev_remotes is iterable
  become: true
  become_user: root

- name: Start with a clean keymap at boot
  ansible.builtin.cron:
    name: "Clean evdev keymap at reboot"
    user: root
    special_time: reboot
    job: >
      sleep 10 &&
      /usr/bin/ir-keytable -v
      -s $(/usr/bin/grep ir-receiver /proc/bus/input/devices | /usr/bin/cut -d / -f 6)
      -c
      >/dev/null 2>&1
  when: james_on_rpi_evdev_remotes is iterable
  notify: Reboot required
  become: true
  become_user: root

- name: Configure remotes at boot
  ansible.builtin.cron:
    name: "Apply evdev keymap at reboot for {{ item }}"
    user: root
    special_time: reboot
    job: >
      sleep {{ 12 | int + my_idx }} &&
      /usr/bin/ir-keytable -v
      -s $(/usr/bin/grep ir-receiver /proc/bus/input/devices | /usr/bin/cut -d / -f 6)
      -w /etc/rc_keymaps/{{ item }}
      >/dev/null 2>&1
  loop: "{{ james_on_rpi_evdev_remotes }}"
  loop_control:
    index_var: my_idx
  when: james_on_rpi_evdev_remotes is iterable
  notify: Reboot required
  become: true
  become_user: root

- name: Flush handlers so the IR device is present for the next step
  ansible.builtin.meta: flush_handlers

- name: Install python requirements for evdev
  ansible.builtin.pip:
    name:
      - evdev
    virtualenv: "{{ james_on_rpi_install_dir }}/venv"
  become: true
  become_user: "{{ james_on_rpi_os_user }}"
