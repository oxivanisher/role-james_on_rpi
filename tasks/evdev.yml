---
# the lirc package is ultimatively stupid and fails at installaion because the .dist file is not renamed to "non dist" if no other file is available ...
# so, the lirc package can not be installed by ansible without very big fuckery ... sry you had to come here and find this comment ... AGAIN
- name: Remove old lirc JamesII packages
  ansible.builtin.package:
    name: lirc
    state: absent

- name: Install required packages
  ansible.builtin.package:
    name: ir-keytable
    state: present

# ensure mounted boot
- name: Mount boot
  ansible.posix.mount:
    path: /boot
    state: mounted
    src: /dev/mmcblk0p1
    fstype: vfat
  changed_when: false

# configuring RPI GPIO
- name: Configure config.txt for lirc rx
  ansible.builtin.lineinfile:
    path: /boot/config.txt
    regexp: "^dtoverlay=gpio-ir,gpio_pin="
    line: "dtoverlay=gpio-ir,gpio_pin={{ james2_lirc_rx_pin }}"
    insertafter: "^# Uncomment this to enable the lirc-rpi module"
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"

- name: Configure config.txt for lirc tx
  ansible.builtin.lineinfile:
    path: /boot/config.txt
    regexp: "^dtoverlay=gpio-ir-tx,gpio_pin="
    line: "dtoverlay=gpio-ir-tx,gpio_pin={{ james2_lirc_tx_pin }}"
    insertafter: "^dtoverlay=gpio-ir,gpio_pin"
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"

- name: Put remote configs in place
  ansible.builtin.copy:
    src: "remotes/{{ item }}"
    dest: /etc/rc_keymaps/
    owner: root
    group: root
    mode: "0644"
  loop: "{{ lircd_remotes }}"
  when: lircd_remotes is iterable

- name: Configure remotes at boot
  ansible.builtin.cron:
    name: "Apply evdev keymap at reboot for {{ item }}"
    user: root
    special_time: reboot
    job: |
      sleep 10 &&
      /usr/bin/ir-keytable -v
      -s $(/usr/bin/grep ir-receiver /proc/bus/input/devices | /usr/bin/cut -d / -f 6)
      -c -w /etc/rc_keymaps/{{ item }}
      >/dev/null 2>&1
  loop: "{{ lircd_remotes }}"
  when: lircd_remotes is iterable
  notify: Reboot required
  failed_when: evdev_rc_number.stdout | length != 3

- name: Flush handlers so the IR device is present for the next step
  ansible.builtin.meta: flush_handlers

- name: Install python requirements for evdev
  ansible.builtin.pip:
    name:
      - evdev
    virtualenv: "{{ james2_install_dir }}/venv"
