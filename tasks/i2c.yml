---
- name: Install required JamesII packages
  ansible.builtin.package:
    name:
      - i2c-tools
    state: present
  become: true
  become_user: root

- name: "Adding existing user to group audio: {{ james_on_rpi_os_user }}"
  ansible.builtin.user:
    name: "{{ james_on_rpi_os_user }}"
    groups: i2c
    append: true
  become: true
  become_user: root

# ensure mounted boot
- name: Override config.txt location for Raspberry Pi OS version before bookworm
  ansible.builtin.set_fact:
    james_on_rpi_config_dir: /boot
  when:
    - ansible_architecture|lower in james_on_rpi_arm_versions
    - ansible_distribution_major_version | int < 12

- name: Override Raspberry PI boot device default since raspberry_pi_boot_dev is set
  ansible.builtin.set_fact:
    james_on_rpi_rpi_boot_dev: "{{ raspberry_pi_boot_dev }}"
  when:
    - ansible_architecture|lower in james_on_rpi_arm_versions
    - raspberry_pi_boot_dev | default('', true) | trim != ''

- name: Mount boot
  ansible.posix.mount:
    path: "{{ james_on_rpi_config_dir }}"
    state: mounted
    src: "{{ james_on_rpi_rpi_boot_dev }}"
    fstype: vfat
  when: ansible_architecture|lower in james_on_rpi_arm_versions
  changed_when: false
  become: true
  become_user: root

- name: Configure config.txt for lirc rx
  ansible.builtin.lineinfile:
    path: "{{ james_on_rpi_config_dir }}/config.txt"
    regexp: "^dtparam=i2c_arm="
    line: "dtparam=i2c_arm=on"
    insertafter: "^# Uncomment some or all of these to enable the optional hardware interfaces"
  when: ansible_architecture|lower in james_on_rpi_arm_versions
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Ensure i2c_dev module is loaded
  ansible.builtin.lineinfile:
    path: /etc/modules
    regexp: "^i2c_dev"
    line: "i2c_dev"
  when: ansible_architecture|lower in james_on_rpi_arm_versions
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: "Adding existing user to group audio: {{ james_on_rpi_os_user }}"
  ansible.builtin.user:
    name: "{{ james_on_rpi_os_user }}"
    groups: audio
    append: true
  become: true
  become_user: root

- name: Install python requirements for i2c
  ansible.builtin.pip:
    name:
      - smbus2
    virtualenv: "{{ james_on_rpi_install_dir }}/venv"
  become: true
  become_user: "{{ james_on_rpi_os_user }}"
